#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CompanyManager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	using CompanyManager.Rules;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CompanyManagerDB")]
	public partial class LinqToSqlDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertPrimaryItem(PrimaryItem instance);
    partial void UpdatePrimaryItem(PrimaryItem instance);
    partial void DeletePrimaryItem(PrimaryItem instance);
    partial void InsertFinalItem(FinalItem instance);
    partial void UpdateFinalItem(FinalItem instance);
    partial void DeleteFinalItem(FinalItem instance);
    partial void InsertRecipeItem(RecipeItem instance);
    partial void UpdateRecipeItem(RecipeItem instance);
    partial void DeleteRecipeItem(RecipeItem instance);
    #endregion
		
		public LinqToSqlDataClassesDataContext() : 
				base(global::CompanyManager.Properties.Settings.Default.CompanyManagerDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<PrimaryItem> PrimaryItems
		{
			get
			{
				return this.GetTable<PrimaryItem>();
			}
		}
		
		public System.Data.Linq.Table<FinalItem> FinalItems
		{
			get
			{
				return this.GetTable<FinalItem>();
			}
		}
		
		public System.Data.Linq.Table<RecipeItem> RecipeItems
		{
			get
			{
				return this.GetTable<RecipeItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Address;
		
		private int _Nif;
		
		private int _MobileContact;
		
		private string _Email;
		
		private string _Country;
		
		private int _CreditLimit;
		
		private string _PaymentConditions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNifChanging(int value);
    partial void OnNifChanged();
    partial void OnMobileContactChanging(int value);
    partial void OnMobileContactChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCreditLimitChanging(int value);
    partial void OnCreditLimitChanged();
    partial void OnPaymentConditionsChanging(string value);
    partial void OnPaymentConditionsChanged();
    #endregion
		
		public Client()
		{
			OnCreated();
		}

		/// <summary>
		/// Class constructor with parameters
		/// </summary>
		/// <param name="Name">Client name</param>
		/// <param name="Address">Client address</param>
		/// <param name="Nif">Client nif</param>
		/// <param name="MobileContact">Client mobile contact</param>
		/// <param name="Email">Client email</param>
		/// <param name="Country">Client country</param>
		/// <param name="paymentConditions">Client payment Conditions</param>
		/// <param name="creditLimit">Client creditLimit</param>
		public Client(string Name, string Address, int Nif, int MobileContact, string Email, string Country, string paymentConditions, int creditLimit)
		{
			this._Name = Name;
			this._Address = Address;
			this._Nif = Nif;
			this._MobileContact = MobileContact;
			this._Email = Email;
			this._Country = Country;
			this._PaymentConditions = paymentConditions;
			this._CreditLimit = creditLimit;
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nif", DbType="Int NOT NULL")]
		public int Nif
		{
			get
			{
				return this._Nif;
			}
			set
			{
				if ((this._Nif != value))
				{
					this.OnNifChanging(value);
					this.SendPropertyChanging();
					this._Nif = value;
					this.SendPropertyChanged("Nif");
					this.OnNifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileContact", DbType="Int NOT NULL")]
		public int MobileContact
		{
			get
			{
				return this._MobileContact;
			}
			set
			{
				if ((this._MobileContact != value))
				{
					this.OnMobileContactChanging(value);
					this.SendPropertyChanging();
					this._MobileContact = value;
					this.SendPropertyChanged("MobileContact");
					this.OnMobileContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Int NOT NULL")]
		public int CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentConditions", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentConditions
		{
			get
			{
				return this._PaymentConditions;
			}
			set
			{
				if ((this._PaymentConditions != value))
				{
					this.OnPaymentConditionsChanging(value);
					this.SendPropertyChanging();
					this._PaymentConditions = value;
					this.SendPropertyChanged("PaymentConditions");
					this.OnPaymentConditionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		/// <summary>
		/// This method overrides the ToString Method of the Client
		/// </summary>
		/// <returns>Formated String<returns>
		public override string ToString()
		{
			return string.Format($" Name: {_Name}\n Address: {_Address}\n Nif: " +
				$"{_Nif}\n Mobile Contact: {_MobileContact}\n Email: {_Email}\n Country: {_Country}" +
				$" \n Payment Conditions: {_PaymentConditions}\n CreditLimit: {_CreditLimit}€");
		}

		/// <summary>
		/// This method allows to compare a client object to other object
		/// </summary>
		/// <param name="obj">Object to compare</param>
		/// <returns>true/false</returns>
		public override bool Equals(object obj)
		{
			if (obj is Client c1)
			{
				if (c1._Name != this._Name)
					return false;
				if (c1._Address != this._Address)
					return false;
				if (c1._Email != this._Email)
					return false;
				if (c1._Nif != this._Nif)
					return false;
				return true;
			}
			else
			{
				return false;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Address;
		
		private int _Nif;
		
		private int _MobileContact;
		
		private string _Email;
		
		private string _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNifChanging(int value);
    partial void OnNifChanged();
    partial void OnMobileContactChanging(int value);
    partial void OnMobileContactChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}

		/// <summary>
		/// Basic classe constructor with all parameters
		/// </summary>
		/// <param name="name">Name of company</param>
		/// <param name="address">Address of company</param>
		/// <param name="nif">Nif of company</param>
		/// <param name="mobileContact">Mobile contact of company</param>
		/// <param name="email">Email of company</param>
		/// <param name="country">Country of company</param>
		public Company(string name,string address,int nif,int mobileContact,string email,string country)
		{
			
			_Name = name;
			_Address = address;
			_Nif = nif;
			_MobileContact = mobileContact;
			_Email = email;
			_Country = country;
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nif", DbType="Int NOT NULL")]
		public int Nif
		{
			get
			{
				return this._Nif;
			}
			set
			{
				if ((this._Nif != value))
				{
					this.OnNifChanging(value);
					this.SendPropertyChanging();
					this._Nif = value;
					this.SendPropertyChanged("Nif");
					this.OnNifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileContact", DbType="Int NOT NULL")]
		public int MobileContact
		{
			get
			{
				return this._MobileContact;
			}
			set
			{
				if ((this._MobileContact != value))
				{
					this.OnMobileContactChanging(value);
					this.SendPropertyChanging();
					this._MobileContact = value;
					this.SendPropertyChanged("MobileContact");
					this.OnMobileContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

        /// <summary>
        /// This method returns all company information
        /// </summary>
        /// <returns>Formated String<returns>
        public override string ToString()
        {
			return String.Format($" Name: {_Name}\n Address: {_Address}\n Nif: " +
				$"{_Nif}\n Mobile Contact: {_MobileContact}\n Email: {_Email}\n Country: {_Country}");

		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Address;
		
		private int _nif;
		
		private int _MobileContact;
		
		private string _Email;
		
		private string _Country;
		
		private string _PaymentConditions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnnifChanging(int value);
    partial void OnnifChanged();
    partial void OnMobileContactChanging(int value);
    partial void OnMobileContactChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnPaymentConditionsChanging(string value);
    partial void OnPaymentConditionsChanged();
    #endregion
		
		public Supplier()
		{
			OnCreated();
		}

		/// <summary>
		/// Class Constructor with parameters
		/// </summary>
		/// <param name="Name">Supplier name</param>
		/// <param name="Address">Supplier address</param>
		/// <param name="Nif">Supplier nif</param>
		/// <param name="MobileContact">Supplier mobile contact</param>
		/// <param name="Email">Supplier email</param>
		/// <param name="Country">Supplier country</param>
		/// <param name="paymentConditions">Supplier payment Conditions</param>
		public Supplier(string Name, string Address, int Nif, int MobileContact, string Email, string Country, string paymentConditions)
		{
			this._Name = Name;
			this._Address = Address;
			this._nif = Nif;
			this._MobileContact = MobileContact;
			this._Email = Email;
			this._Country = Country;
			this._PaymentConditions = paymentConditions;
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nif", DbType="Int NOT NULL")]
		public int nif
		{
			get
			{
				return this._nif;
			}
			set
			{
				if ((this._nif != value))
				{
					this.OnnifChanging(value);
					this.SendPropertyChanging();
					this._nif = value;
					this.SendPropertyChanged("nif");
					this.OnnifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileContact", DbType="Int NOT NULL")]
		public int MobileContact
		{
			get
			{
				return this._MobileContact;
			}
			set
			{
				if ((this._MobileContact != value))
				{
					this.OnMobileContactChanging(value);
					this.SendPropertyChanging();
					this._MobileContact = value;
					this.SendPropertyChanged("MobileContact");
					this.OnMobileContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentConditions", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PaymentConditions
		{
			get
			{
				return this._PaymentConditions;
			}
			set
			{
				if ((this._PaymentConditions != value))
				{
					this.OnPaymentConditionsChanging(value);
					this.SendPropertyChanging();
					this._PaymentConditions = value;
					this.SendPropertyChanged("PaymentConditions");
					this.OnPaymentConditionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		/// <summary>
		/// This method overrides the ToString Method 
		/// </summary>
		/// <returns>Formated String<returns>
		public override string ToString()
		{

			return string.Format($" Name:{_Name}\n Address: {_Address}\n Nif:" +
				$"{_nif}\n Mobile Contact: {_MobileContact}\n Email:{_Email}\n Country:{_Country}\n Payment Conditions:{_PaymentConditions}");
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PrimaryItem")]
	public partial class PrimaryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private double _Amount;
		
		private EntitySet<RecipeItem> _RecipeItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public PrimaryItem()
		{
			this._RecipeItems = new EntitySet<RecipeItem>(new Action<RecipeItem>(this.attach_RecipeItems), new Action<RecipeItem>(this.detach_RecipeItems));
			OnCreated();
		}

		/// <summary>
		/// This is the class constructor
		/// </summary>
		/// <param name="itemId">Item id</param>
		/// <param name="amount">Amount of item in stock</param>
		/// <param name="itemName">Item name</param>
		public PrimaryItem(double amount, string itemName)
		{
			this._RecipeItems = new EntitySet<RecipeItem>(new Action<RecipeItem>(this.attach_RecipeItems), new Action<RecipeItem>(this.detach_RecipeItems));
			this._Amount = amount;
			this._Name = itemName; 
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrimaryItem_RecipeItem", Storage="_RecipeItems", ThisKey="Id", OtherKey="PrimaryItem")]
		public EntitySet<RecipeItem> RecipeItems
		{
			get
			{
				return this._RecipeItems;
			}
			set
			{
				this._RecipeItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecipeItems(RecipeItem entity)
		{
			this.SendPropertyChanging();
			entity.PrimaryItem1 = this;
		}
		
		private void detach_RecipeItems(RecipeItem entity)
		{
			this.SendPropertyChanging();
			entity.PrimaryItem1 = null;
		}

		/// <summary>
		/// This method allows to turn this item into a string
		/// </summary>
		/// <returns>String -> formated string with item information</returns>
		public override string ToString()
		{
			return string.Format($"\nItem: {_Name}\nId: {_Id}\nStock: {_Amount}");
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinalItem")]
	public partial class FinalItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<double> _Amount;
		
		private System.Nullable<double> _Price;
		
		private EntitySet<RecipeItem> _RecipeItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    #endregion
		
		public FinalItem()
		{
			this._RecipeItems = new EntitySet<RecipeItem>(new Action<RecipeItem>(this.attach_RecipeItems), new Action<RecipeItem>(this.detach_RecipeItems));
			OnCreated();
		}

		/// <summary>
		/// Basic constructo of FinalItem class
		/// </summary>
		/// <param name="price">Item price</param>
		/// <param name="amount">Item amount</param>
		/// <param name="itemName">Item name</param>
		public FinalItem(double price, double amount, string itemName)
		{
			this._RecipeItems = new EntitySet<RecipeItem>(new Action<RecipeItem>(this.attach_RecipeItems), new Action<RecipeItem>(this.detach_RecipeItems));
			this._Amount = amount;
			this._Name = itemName;
			this.Price = price;
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinalItem_RecipeItem", Storage="_RecipeItems", ThisKey="Id", OtherKey="FinalItem")]
		public EntitySet<RecipeItem> RecipeItems
		{
			get
			{
				return this._RecipeItems;
			}
			set
			{
				this._RecipeItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecipeItems(RecipeItem entity)
		{
			this.SendPropertyChanging();
			entity.FinalItem1 = this;
		}
		
		private void detach_RecipeItems(RecipeItem entity)
		{
			this.SendPropertyChanging();
			entity.FinalItem1 = null;
		}
		/// <summary>
		/// This method allows to get all the item information ina string
		/// </summary>
		/// <returns>String</returns>
		public override string ToString()
		{
			return string.Format($"\nItem: {_Name}\nId: {_Id}\nStock: {_Amount}\nPrice: {_Price}"); ;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipeItem")]
	public partial class RecipeItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PrimaryItem;
		
		private int _FinalItem;
		
		private double _Amount;
		
		private EntityRef<FinalItem> _FinalItem1;
		
		private EntityRef<PrimaryItem> _PrimaryItem1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPrimaryItemChanging(int value);
    partial void OnPrimaryItemChanged();
    partial void OnFinalItemChanging(int value);
    partial void OnFinalItemChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public RecipeItem()
		{
			this._FinalItem1 = default(EntityRef<FinalItem>);
			this._PrimaryItem1 = default(EntityRef<PrimaryItem>);
			OnCreated();
		}

		public RecipeItem(double amount, int FinalItem,int PrimaryItem)
		{
			this._FinalItem = FinalItem;
			this._PrimaryItem = PrimaryItem;
			this.Amount = amount;
			OnCreated();
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryItem", DbType="Int NOT NULL")]
		public int PrimaryItem
		{
			get
			{
				return this._PrimaryItem;
			}
			set
			{
				if ((this._PrimaryItem != value))
				{
					if (this._PrimaryItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrimaryItemChanging(value);
					this.SendPropertyChanging();
					this._PrimaryItem = value;
					this.SendPropertyChanged("PrimaryItem");
					this.OnPrimaryItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinalItem", DbType="Int NOT NULL")]
		public int FinalItem
		{
			get
			{
				return this._FinalItem;
			}
			set
			{
				if ((this._FinalItem != value))
				{
					if (this._FinalItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinalItemChanging(value);
					this.SendPropertyChanging();
					this._FinalItem = value;
					this.SendPropertyChanged("FinalItem");
					this.OnFinalItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinalItem_RecipeItem", Storage="_FinalItem1", ThisKey="FinalItem", OtherKey="Id", IsForeignKey=true)]
		public FinalItem FinalItem1
		{
			get
			{
				return this._FinalItem1.Entity;
			}
			set
			{
				FinalItem previousValue = this._FinalItem1.Entity;
				if (((previousValue != value) 
							|| (this._FinalItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinalItem1.Entity = null;
						previousValue.RecipeItems.Remove(this);
					}
					this._FinalItem1.Entity = value;
					if ((value != null))
					{
						value.RecipeItems.Add(this);
						this._FinalItem = value.Id;
					}
					else
					{
						this._FinalItem = default(int);
					}
					this.SendPropertyChanged("FinalItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PrimaryItem_RecipeItem", Storage="_PrimaryItem1", ThisKey="PrimaryItem", OtherKey="Id", IsForeignKey=true)]
		public PrimaryItem PrimaryItem1
		{
			get
			{
				return this._PrimaryItem1.Entity;
			}
			set
			{
				PrimaryItem previousValue = this._PrimaryItem1.Entity;
				if (((previousValue != value) 
							|| (this._PrimaryItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PrimaryItem1.Entity = null;
						previousValue.RecipeItems.Remove(this);
					}
					this._PrimaryItem1.Entity = value;
					if ((value != null))
					{
						value.RecipeItems.Add(this);
						this._PrimaryItem = value.Id;
					}
					else
					{
						this._PrimaryItem = default(int);
					}
					this.SendPropertyChanged("PrimaryItem1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		/// <summary>
		/// This method allows to compare two objects of this class
		/// </summary>
		/// <param name="obj">Object to compare</param>
		/// <returns></returns>
        public override bool Equals(object obj)
        {
			if (!(obj is RecipeItem))
				return false;

			RecipeItem aux = (obj as RecipeItem);
			if (aux.PrimaryItem == this.PrimaryItem)
				return true;

			return false;
            

        }

		/// <summary>
		/// This method allows to get the RecipeItem information in a string
		/// </summary>
		/// <returns>String</returns>
		public override string ToString()
		{
			ItemsRules.GetPrimaryitem(PrimaryItem);
			return string.Format($"Quantity: {Amount}");
		}
	}
}
#pragma warning restore 1591
